apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: argocd-kuber-todo-role
  namespace: kuber-todo
rules:
  # Allow ArgoCD to manage the usual app resources in the target namespace
  - apiGroups: [""]
    resources: ["pods","services","endpoints","persistentvolumeclaims","secrets","configmaps"]
    verbs: ["get","list","watch","create","update","patch","delete"]
  - apiGroups: ["apps"]
    resources: ["deployments","statefulsets","daemonsets","replicasets"]
    verbs: ["get","list","watch","create","update","patch","delete"]
  - apiGroups: ["batch"]
    resources: ["jobs","cronjobs"]
    verbs: ["get","list","watch","create","update","patch","delete"]
  - apiGroups: ["networking.k8s.io"]
    resources: ["ingresses","networkpolicies"]
    verbs: ["get","list","watch","create","update","patch","delete"]
  - apiGroups: ["policy"]
    resources: ["poddisruptionbudgets"]
    verbs: ["get","list","watch","create","update","patch","delete"]
  - apiGroups: ["rbac.authorization.k8s.io"]
    resources: ["roles","rolebindings"]
    verbs: ["get","list","watch","create","update","patch","delete"]

---
# Bind the role to the ArgoCD application controller service account so ArgoCD can manage resources
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: argocd-kuber-todo-rolebinding
  namespace: kuber-todo
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: argocd-kuber-todo-role
subjects:
  - kind: ServiceAccount
    name: argocd-application-controller
    namespace: argocd
